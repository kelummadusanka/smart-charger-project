
test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f2  00800100  00000aa8  00000b3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000462  008001f2  008001f2  00000c2e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000ca0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002004  00000000  00000000  00000df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b46  00000000  00000000  00002df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e7c  00000000  00000000  0000393a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  000047b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000721  00000000  00000000  00004aac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fc2  00000000  00000000  000051cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  0000618f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 01 	jmp	0x27a	; 0x27a <__ctors_end>
   4:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
   8:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
   c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  10:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  14:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  18:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  1c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  20:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  24:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  28:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  2c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  30:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  34:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  38:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  3c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  40:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  44:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  48:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  4c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  50:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  54:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  58:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  5c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  60:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
  64:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>

00000068 <FONTS>:
  68:	00 00 00 00 00 81 81 18 81 81 00 07 00 07 00 14     ................
  78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
  e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
  f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 1f8:	7c 14 14 14 08 08 14 14 14 7c 7c 08 04 04 08 48     |........||....H
 208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <INIT_SSD1306>:
 248:	12 00 ae 01 a8 3f 01 20 00 02 21 00 7f 02 22 00     .....?. ..!...".
 258:	07 00 40 01 d3 00 00 a1 00 c8 01 da 12 01 81 7f     ..@.............
 268:	00 a4 00 a6 01 d5 80 01 d9 c2 01 db 20 01 8d 14     ............ ...
 278:	00 af                                               ..

0000027a <__ctors_end>:
 27a:	11 24       	eor	r1, r1
 27c:	1f be       	out	0x3f, r1	; 63
 27e:	cf ef       	ldi	r28, 0xFF	; 255
 280:	d8 e0       	ldi	r29, 0x08	; 8
 282:	de bf       	out	0x3e, r29	; 62
 284:	cd bf       	out	0x3d, r28	; 61

00000286 <__do_copy_data>:
 286:	11 e0       	ldi	r17, 0x01	; 1
 288:	a0 e0       	ldi	r26, 0x00	; 0
 28a:	b1 e0       	ldi	r27, 0x01	; 1
 28c:	e8 ea       	ldi	r30, 0xA8	; 168
 28e:	fa e0       	ldi	r31, 0x0A	; 10
 290:	02 c0       	rjmp	.+4      	; 0x296 <__do_copy_data+0x10>
 292:	05 90       	lpm	r0, Z+
 294:	0d 92       	st	X+, r0
 296:	a2 3f       	cpi	r26, 0xF2	; 242
 298:	b1 07       	cpc	r27, r17
 29a:	d9 f7       	brne	.-10     	; 0x292 <__do_copy_data+0xc>

0000029c <__do_clear_bss>:
 29c:	26 e0       	ldi	r18, 0x06	; 6
 29e:	a2 ef       	ldi	r26, 0xF2	; 242
 2a0:	b1 e0       	ldi	r27, 0x01	; 1
 2a2:	01 c0       	rjmp	.+2      	; 0x2a6 <.do_clear_bss_start>

000002a4 <.do_clear_bss_loop>:
 2a4:	1d 92       	st	X+, r1

000002a6 <.do_clear_bss_start>:
 2a6:	a4 35       	cpi	r26, 0x54	; 84
 2a8:	b2 07       	cpc	r27, r18
 2aa:	e1 f7       	brne	.-8      	; 0x2a4 <.do_clear_bss_loop>
 2ac:	0e 94 4e 04 	call	0x89c	; 0x89c <main>
 2b0:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <_exit>

000002b4 <__bad_interrupt>:
 2b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002b8 <SSD1306_Send_StartAndSLAW>:
    return status;
  }


  return SSD1306_SUCCESS;
}
 2b8:	cf 93       	push	r28
 2ba:	c8 2f       	mov	r28, r24
 2bc:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <TWI_MT_Start>
 2c0:	81 11       	cpse	r24, r1
 2c2:	03 c0       	rjmp	.+6      	; 0x2ca <SSD1306_Send_StartAndSLAW+0x12>
 2c4:	8c 2f       	mov	r24, r28
 2c6:	0e 94 8a 02 	call	0x514	; 0x514 <TWI_MT_Send_SLAW>
 2ca:	cf 91       	pop	r28
 2cc:	08 95       	ret

000002ce <SSD1306_Send_Command>:
 2ce:	cf 93       	push	r28
 2d0:	c8 2f       	mov	r28, r24
 2d2:	80 e8       	ldi	r24, 0x80	; 128
 2d4:	0e 94 9f 02 	call	0x53e	; 0x53e <TWI_MT_Send_Data>
 2d8:	81 11       	cpse	r24, r1
 2da:	03 c0       	rjmp	.+6      	; 0x2e2 <SSD1306_Send_Command+0x14>
 2dc:	8c 2f       	mov	r24, r28
 2de:	0e 94 9f 02 	call	0x53e	; 0x53e <TWI_MT_Send_Data>
 2e2:	cf 91       	pop	r28
 2e4:	08 95       	ret

000002e6 <SSD1306_Init>:
 2e6:	cf 92       	push	r12
 2e8:	df 92       	push	r13
 2ea:	ef 92       	push	r14
 2ec:	ff 92       	push	r15
 2ee:	0f 93       	push	r16
 2f0:	1f 93       	push	r17
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	c8 2f       	mov	r28, r24
 2f8:	e8 e4       	ldi	r30, 0x48	; 72
 2fa:	f2 e0       	ldi	r31, 0x02	; 2
 2fc:	e4 91       	lpm	r30, Z
 2fe:	ee 2e       	mov	r14, r30
 300:	f1 2c       	mov	r15, r1
 302:	0e 94 60 02 	call	0x4c0	; 0x4c0 <TWI_Init>
 306:	8c 2f       	mov	r24, r28
 308:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <SSD1306_Send_StartAndSLAW>
 30c:	81 11       	cpse	r24, r1
 30e:	26 c0       	rjmp	.+76     	; 0x35c <SSD1306_Init+0x76>
 310:	c9 e4       	ldi	r28, 0x49	; 73
 312:	d2 e0       	ldi	r29, 0x02	; 2
 314:	1d c0       	rjmp	.+58     	; 0x350 <SSD1306_Init+0x6a>
 316:	fe 01       	movw	r30, r28
 318:	14 91       	lpm	r17, Z
 31a:	31 96       	adiw	r30, 0x01	; 1
 31c:	84 91       	lpm	r24, Z
 31e:	22 96       	adiw	r28, 0x02	; 2
 320:	0e 94 67 01 	call	0x2ce	; 0x2ce <SSD1306_Send_Command>
 324:	88 23       	and	r24, r24
 326:	69 f0       	breq	.+26     	; 0x342 <SSD1306_Init+0x5c>
 328:	19 c0       	rjmp	.+50     	; 0x35c <SSD1306_Init+0x76>
 32a:	6e 01       	movw	r12, r28
 32c:	ff ef       	ldi	r31, 0xFF	; 255
 32e:	cf 1a       	sub	r12, r31
 330:	df 0a       	sbc	r13, r31
 332:	fe 01       	movw	r30, r28
 334:	84 91       	lpm	r24, Z
 336:	0e 94 67 01 	call	0x2ce	; 0x2ce <SSD1306_Send_Command>
 33a:	10 2f       	mov	r17, r16
 33c:	81 11       	cpse	r24, r1
 33e:	0e c0       	rjmp	.+28     	; 0x35c <SSD1306_Init+0x76>
 340:	e6 01       	movw	r28, r12
 342:	0f ef       	ldi	r16, 0xFF	; 255
 344:	01 0f       	add	r16, r17
 346:	11 11       	cpse	r17, r1
 348:	f0 cf       	rjmp	.-32     	; 0x32a <SSD1306_Init+0x44>
 34a:	f1 e0       	ldi	r31, 0x01	; 1
 34c:	ef 1a       	sub	r14, r31
 34e:	f1 08       	sbc	r15, r1
 350:	e1 14       	cp	r14, r1
 352:	f1 04       	cpc	r15, r1
 354:	01 f7       	brne	.-64     	; 0x316 <SSD1306_Init+0x30>
 356:	0e 94 b3 02 	call	0x566	; 0x566 <TWI_Stop>
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	ff 90       	pop	r15
 366:	ef 90       	pop	r14
 368:	df 90       	pop	r13
 36a:	cf 90       	pop	r12
 36c:	08 95       	ret

0000036e <SSD1306_UpdateScreen>:


uint8_t SSD1306_UpdateScreen (uint8_t address)
{
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
  uint8_t status = INIT_STATUS;

  uint16_t i = 0;


  status = SSD1306_Send_StartAndSLAW (address);
 372:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <SSD1306_Send_StartAndSLAW>
 
  if (SSD1306_SUCCESS != status) {
 376:	81 11       	cpse	r24, r1
 378:	18 c0       	rjmp	.+48     	; 0x3aa <SSD1306_UpdateScreen+0x3c>
    return status;
  }
  
  status = TWI_MT_Send_Data (SSD1306_DATA_STREAM);
 37a:	80 e4       	ldi	r24, 0x40	; 64
 37c:	0e 94 9f 02 	call	0x53e	; 0x53e <TWI_MT_Send_Data>
  if (SSD1306_SUCCESS != status) {
 380:	81 11       	cpse	r24, r1
 382:	13 c0       	rjmp	.+38     	; 0x3aa <SSD1306_UpdateScreen+0x3c>
 384:	c0 e0       	ldi	r28, 0x00	; 0
 386:	d0 e0       	ldi	r29, 0x00	; 0
 388:	09 c0       	rjmp	.+18     	; 0x39c <SSD1306_UpdateScreen+0x2e>
  }


  while (i < CACHE_SIZE_MEM) {

    status = TWI_MT_Send_Data (cacheMemLcd[i]);
 38a:	fe 01       	movw	r30, r28
 38c:	ee 50       	subi	r30, 0x0E	; 14
 38e:	fe 4f       	sbci	r31, 0xFE	; 254
 390:	80 81       	ld	r24, Z
 392:	0e 94 9f 02 	call	0x53e	; 0x53e <TWI_MT_Send_Data>

    if (SSD1306_SUCCESS != status) {
 396:	81 11       	cpse	r24, r1
 398:	08 c0       	rjmp	.+16     	; 0x3aa <SSD1306_UpdateScreen+0x3c>

      return status;
    }

    i++;
 39a:	21 96       	adiw	r28, 0x01	; 1
    // error
    return status;
  }


  while (i < CACHE_SIZE_MEM) {
 39c:	c1 15       	cp	r28, r1
 39e:	84 e0       	ldi	r24, 0x04	; 4
 3a0:	d8 07       	cpc	r29, r24
 3a2:	98 f3       	brcs	.-26     	; 0x38a <SSD1306_UpdateScreen+0x1c>

    i++;
  }


  TWI_Stop ();
 3a4:	0e 94 b3 02 	call	0x566	; 0x566 <TWI_Stop>


  return SSD1306_SUCCESS;
 3a8:	80 e0       	ldi	r24, 0x00	; 0
}
 3aa:	df 91       	pop	r29
 3ac:	cf 91       	pop	r28
 3ae:	08 95       	ret

000003b0 <SSD1306_ClearScreen>:


void SSD1306_ClearScreen (void)
{

  memset (cacheMemLcd, 0x00, CACHE_SIZE_MEM);
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	94 e0       	ldi	r25, 0x04	; 4
 3b4:	e2 ef       	ldi	r30, 0xF2	; 242
 3b6:	f1 e0       	ldi	r31, 0x01	; 1
 3b8:	df 01       	movw	r26, r30
 3ba:	9c 01       	movw	r18, r24
 3bc:	1d 92       	st	X+, r1
 3be:	21 50       	subi	r18, 0x01	; 1
 3c0:	30 40       	sbci	r19, 0x00	; 0
 3c2:	e1 f7       	brne	.-8      	; 0x3bc <SSD1306_ClearScreen+0xc>
 3c4:	08 95       	ret

000003c6 <SSD1306_SetPosition>:


void SSD1306_SetPosition (uint8_t x, uint8_t y) 
{

  _counter = x + (y << 7);
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	20 e8       	ldi	r18, 0x80	; 128
 3ca:	62 9f       	mul	r22, r18
 3cc:	80 0d       	add	r24, r0
 3ce:	91 1d       	adc	r25, r1
 3d0:	11 24       	eor	r1, r1
 3d2:	90 93 f7 05 	sts	0x05F7, r25	; 0x8005f7 <_counter+0x1>
 3d6:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <_counter>
 3da:	08 95       	ret

000003dc <SSD1306_UpdTxtPosition>:


uint8_t SSD1306_UpdTxtPosition (void) 
{

  uint8_t y = _counter >> 7;
 3dc:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <_counter>
 3e0:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <_counter+0x1>
 3e4:	9c 01       	movw	r18, r24
 3e6:	22 0f       	add	r18, r18
 3e8:	23 2f       	mov	r18, r19
 3ea:	22 1f       	adc	r18, r18
 3ec:	33 0b       	sbc	r19, r19
 3ee:	31 95       	neg	r19

  uint8_t x = _counter - (y << 7);
 3f0:	92 2f       	mov	r25, r18
 3f2:	97 95       	ror	r25
 3f4:	99 27       	eor	r25, r25
 3f6:	97 95       	ror	r25
 3f8:	89 1b       	sub	r24, r25

  uint8_t x_new = x + CHARS_COLS_LENGTH + 1;
 3fa:	8a 5f       	subi	r24, 0xFA	; 250


  if (x_new > END_COLUMN_ADDR) {
 3fc:	7a f4       	brpl	.+30     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>

    if (y > END_PAGE_ADDR) {
 3fe:	28 30       	cpi	r18, 0x08	; 8
 400:	78 f4       	brcc	.+30     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>

      return SSD1306_ERROR;

    } else if (y < (END_PAGE_ADDR-1)) {
 402:	26 30       	cpi	r18, 0x06	; 6
 404:	78 f4       	brcc	.+30     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>

      _counter = ((++y) << 7);
 406:	2f 5f       	subi	r18, 0xFF	; 255
 408:	80 e8       	ldi	r24, 0x80	; 128
 40a:	28 9f       	mul	r18, r24
 40c:	90 01       	movw	r18, r0
 40e:	11 24       	eor	r1, r1
 410:	30 93 f7 05 	sts	0x05F7, r19	; 0x8005f7 <_counter+0x1>
 414:	20 93 f6 05 	sts	0x05F6, r18	; 0x8005f6 <_counter>
    }
  }

  return SSD1306_SUCCESS;
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	08 95       	ret
 41c:	80 e0       	ldi	r24, 0x00	; 0
 41e:	08 95       	ret

  if (x_new > END_COLUMN_ADDR) {

    if (y > END_PAGE_ADDR) {

      return SSD1306_ERROR;
 420:	81 e0       	ldi	r24, 0x01	; 1
 422:	08 95       	ret

      _counter = ((++y) << 7);
    }
  }

  return SSD1306_SUCCESS;
 424:	80 e0       	ldi	r24, 0x00	; 0
}
 426:	08 95       	ret

00000428 <SSD1306_DrawChar>:


uint8_t SSD1306_DrawChar (char character)
{
 428:	cf 93       	push	r28
 42a:	c8 2f       	mov	r28, r24

  uint8_t i = 0;

  if (SSD1306_UpdTxtPosition () == SSD1306_ERROR) {
 42c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <SSD1306_UpdTxtPosition>
 430:	81 30       	cpi	r24, 0x01	; 1
 432:	71 f1       	breq	.+92     	; 0x490 <SSD1306_DrawChar+0x68>
 434:	40 e0       	ldi	r20, 0x00	; 0
 436:	20 c0       	rjmp	.+64     	; 0x478 <SSD1306_DrawChar+0x50>
    return SSD1306_ERROR;
  }

  while (i < CHARS_COLS_LENGTH) {

    cacheMemLcd[_counter++] = pgm_read_byte(&FONTS[character-32][i++]);
 438:	20 91 f6 05 	lds	r18, 0x05F6	; 0x8005f6 <_counter>
 43c:	30 91 f7 05 	lds	r19, 0x05F7	; 0x8005f7 <_counter+0x1>
 440:	c9 01       	movw	r24, r18
 442:	01 96       	adiw	r24, 0x01	; 1
 444:	90 93 f7 05 	sts	0x05F7, r25	; 0x8005f7 <_counter+0x1>
 448:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <_counter>
 44c:	8c 2f       	mov	r24, r28
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	80 97       	sbiw	r24, 0x20	; 32
 452:	51 e0       	ldi	r21, 0x01	; 1
 454:	54 0f       	add	r21, r20
 456:	fc 01       	movw	r30, r24
 458:	ee 0f       	add	r30, r30
 45a:	ff 1f       	adc	r31, r31
 45c:	ee 0f       	add	r30, r30
 45e:	ff 1f       	adc	r31, r31
 460:	e8 0f       	add	r30, r24
 462:	f9 1f       	adc	r31, r25
 464:	e4 0f       	add	r30, r20
 466:	f1 1d       	adc	r31, r1
 468:	e8 59       	subi	r30, 0x98	; 152
 46a:	ff 4f       	sbci	r31, 0xFF	; 255
 46c:	e4 91       	lpm	r30, Z
 46e:	d9 01       	movw	r26, r18
 470:	ae 50       	subi	r26, 0x0E	; 14
 472:	be 4f       	sbci	r27, 0xFE	; 254
 474:	ec 93       	st	X, r30
 476:	45 2f       	mov	r20, r21
  if (SSD1306_UpdTxtPosition () == SSD1306_ERROR) {

    return SSD1306_ERROR;
  }

  while (i < CHARS_COLS_LENGTH) {
 478:	45 30       	cpi	r20, 0x05	; 5
 47a:	f0 f2       	brcs	.-68     	; 0x438 <SSD1306_DrawChar+0x10>

    cacheMemLcd[_counter++] = pgm_read_byte(&FONTS[character-32][i++]);
  }


  _counter++;
 47c:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <_counter>
 480:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <_counter+0x1>
 484:	01 96       	adiw	r24, 0x01	; 1
 486:	90 93 f7 05 	sts	0x05F7, r25	; 0x8005f7 <_counter+0x1>
 48a:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <_counter>


  return SSD1306_SUCCESS;
 48e:	80 e0       	ldi	r24, 0x00	; 0
}
 490:	cf 91       	pop	r28
 492:	08 95       	ret

00000494 <SSD1306_DrawString>:


void SSD1306_DrawString (char *str)
{
 494:	0f 93       	push	r16
 496:	1f 93       	push	r17
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	8c 01       	movw	r16, r24

  int i = 0;
 49e:	c0 e0       	ldi	r28, 0x00	; 0
 4a0:	d0 e0       	ldi	r29, 0x00	; 0

  while (str[i] != '\0') {
 4a2:	03 c0       	rjmp	.+6      	; 0x4aa <SSD1306_DrawString+0x16>

    SSD1306_DrawChar (str[i++]);
 4a4:	21 96       	adiw	r28, 0x01	; 1
 4a6:	0e 94 14 02 	call	0x428	; 0x428 <SSD1306_DrawChar>
void SSD1306_DrawString (char *str)
{

  int i = 0;

  while (str[i] != '\0') {
 4aa:	f8 01       	movw	r30, r16
 4ac:	ec 0f       	add	r30, r28
 4ae:	fd 1f       	adc	r31, r29
 4b0:	80 81       	ld	r24, Z
 4b2:	81 11       	cpse	r24, r1
 4b4:	f7 cf       	rjmp	.-18     	; 0x4a4 <SSD1306_DrawString+0x10>

    SSD1306_DrawChar (str[i++]);
  }
}
 4b6:	df 91       	pop	r29
 4b8:	cf 91       	pop	r28
 4ba:	1f 91       	pop	r17
 4bc:	0f 91       	pop	r16
 4be:	08 95       	ret

000004c0 <TWI_Init>:
    // return status
    return TWI_STATUS;
  }
  // success
  return SUCCESS;
}
 4c0:	83 e0       	ldi	r24, 0x03	; 3
 4c2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 4c6:	e9 eb       	ldi	r30, 0xB9	; 185
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	80 81       	ld	r24, Z
 4cc:	90 81       	ld	r25, Z
 4ce:	82 70       	andi	r24, 0x02	; 2
 4d0:	81 60       	ori	r24, 0x01	; 1
 4d2:	89 2b       	or	r24, r25
 4d4:	80 83       	st	Z, r24
 4d6:	08 95       	ret

000004d8 <TWI_MT_Start>:
 4d8:	e9 eb       	ldi	r30, 0xB9	; 185
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	80 81       	ld	r24, Z
 4de:	87 75       	andi	r24, 0x57	; 87
 4e0:	80 83       	st	Z, r24
 4e2:	84 ea       	ldi	r24, 0xA4	; 164
 4e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 4e8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 4ec:	88 23       	and	r24, r24
 4ee:	e4 f7       	brge	.-8      	; 0x4e8 <TWI_MT_Start+0x10>
 4f0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 4f4:	88 7f       	andi	r24, 0xF8	; 248
 4f6:	88 30       	cpi	r24, 0x08	; 8
 4f8:	49 f0       	breq	.+18     	; 0x50c <TWI_MT_Start+0x34>
 4fa:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 4fe:	88 7f       	andi	r24, 0xF8	; 248
 500:	80 31       	cpi	r24, 0x10	; 16
 502:	31 f0       	breq	.+12     	; 0x510 <TWI_MT_Start+0x38>
 504:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 508:	88 7f       	andi	r24, 0xF8	; 248
 50a:	08 95       	ret
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	08 95       	ret
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	08 95       	ret

00000514 <TWI_MT_Send_SLAW>:
 514:	88 0f       	add	r24, r24
 516:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 51a:	84 e8       	ldi	r24, 0x84	; 132
 51c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 520:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 524:	88 23       	and	r24, r24
 526:	e4 f7       	brge	.-8      	; 0x520 <TWI_MT_Send_SLAW+0xc>
 528:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 52c:	88 7f       	andi	r24, 0xF8	; 248
 52e:	88 31       	cpi	r24, 0x18	; 24
 530:	21 f0       	breq	.+8      	; 0x53a <TWI_MT_Send_SLAW+0x26>
 532:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 536:	88 7f       	andi	r24, 0xF8	; 248
 538:	08 95       	ret
 53a:	80 e0       	ldi	r24, 0x00	; 0
 53c:	08 95       	ret

0000053e <TWI_MT_Send_Data>:
 53e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 542:	84 e8       	ldi	r24, 0x84	; 132
 544:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 548:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 54c:	88 23       	and	r24, r24
 54e:	e4 f7       	brge	.-8      	; 0x548 <TWI_MT_Send_Data+0xa>
 550:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 554:	88 7f       	andi	r24, 0xF8	; 248
 556:	88 32       	cpi	r24, 0x28	; 40
 558:	21 f0       	breq	.+8      	; 0x562 <TWI_MT_Send_Data+0x24>
 55a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 55e:	88 7f       	andi	r24, 0xF8	; 248
 560:	08 95       	ret
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	08 95       	ret

00000566 <TWI_Stop>:
void TWI_Stop (void)
{
  // End TWI
  // -------------------------------------------------
  // send stop sequence
  TWI_STOP ();
 566:	84 e9       	ldi	r24, 0x94	; 148
 568:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 56c:	08 95       	ret

0000056e <update_menu>:
	int currentAddress = items*sizeof(chargePar);
	eeprom_write_block(&chp,(void*)(k*sizeof(chargePar)),sizeof(chargePar));
	items++;
	eeprom_update_word((uint16_t*)1000,items);
	
};
 56e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 572:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 576:	82 30       	cpi	r24, 0x02	; 2
 578:	91 05       	cpc	r25, r1
 57a:	51 f1       	breq	.+84     	; 0x5d0 <update_menu+0x62>
 57c:	83 30       	cpi	r24, 0x03	; 3
 57e:	91 05       	cpc	r25, r1
 580:	09 f4       	brne	.+2      	; 0x584 <update_menu+0x16>
 582:	49 c0       	rjmp	.+146    	; 0x616 <update_menu+0xa8>
 584:	01 97       	sbiw	r24, 0x01	; 1
 586:	09 f0       	breq	.+2      	; 0x58a <update_menu+0x1c>
 588:	68 c0       	rjmp	.+208    	; 0x65a <update_menu+0xec>
 58a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 58e:	61 e0       	ldi	r22, 0x01	; 1
 590:	87 e0       	ldi	r24, 0x07	; 7
 592:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 596:	83 e0       	ldi	r24, 0x03	; 3
 598:	91 e0       	ldi	r25, 0x01	; 1
 59a:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 59e:	88 ef       	ldi	r24, 0xF8	; 248
 5a0:	95 e0       	ldi	r25, 0x05	; 5
 5a2:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 5a6:	62 e0       	ldi	r22, 0x02	; 2
 5a8:	87 e0       	ldi	r24, 0x07	; 7
 5aa:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 5ae:	86 e1       	ldi	r24, 0x16	; 22
 5b0:	96 e0       	ldi	r25, 0x06	; 6
 5b2:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 5b6:	63 e0       	ldi	r22, 0x03	; 3
 5b8:	87 e0       	ldi	r24, 0x07	; 7
 5ba:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 5be:	84 e3       	ldi	r24, 0x34	; 52
 5c0:	96 e0       	ldi	r25, 0x06	; 6
 5c2:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 5c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 5ca:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 5ce:	08 95       	ret
 5d0:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 5d4:	61 e0       	ldi	r22, 0x01	; 1
 5d6:	87 e0       	ldi	r24, 0x07	; 7
 5d8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 5dc:	88 ef       	ldi	r24, 0xF8	; 248
 5de:	95 e0       	ldi	r25, 0x05	; 5
 5e0:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 5e4:	62 e0       	ldi	r22, 0x02	; 2
 5e6:	87 e0       	ldi	r24, 0x07	; 7
 5e8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 5ec:	83 e0       	ldi	r24, 0x03	; 3
 5ee:	91 e0       	ldi	r25, 0x01	; 1
 5f0:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 5f4:	86 e1       	ldi	r24, 0x16	; 22
 5f6:	96 e0       	ldi	r25, 0x06	; 6
 5f8:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 5fc:	63 e0       	ldi	r22, 0x03	; 3
 5fe:	87 e0       	ldi	r24, 0x07	; 7
 600:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 604:	84 e3       	ldi	r24, 0x34	; 52
 606:	96 e0       	ldi	r25, 0x06	; 6
 608:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 60c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 610:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 614:	08 95       	ret
 616:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 61a:	61 e0       	ldi	r22, 0x01	; 1
 61c:	87 e0       	ldi	r24, 0x07	; 7
 61e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 622:	88 ef       	ldi	r24, 0xF8	; 248
 624:	95 e0       	ldi	r25, 0x05	; 5
 626:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 62a:	62 e0       	ldi	r22, 0x02	; 2
 62c:	87 e0       	ldi	r24, 0x07	; 7
 62e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 632:	86 e1       	ldi	r24, 0x16	; 22
 634:	96 e0       	ldi	r25, 0x06	; 6
 636:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 63a:	63 e0       	ldi	r22, 0x03	; 3
 63c:	87 e0       	ldi	r24, 0x07	; 7
 63e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 642:	83 e0       	ldi	r24, 0x03	; 3
 644:	91 e0       	ldi	r25, 0x01	; 1
 646:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 64a:	84 e3       	ldi	r24, 0x34	; 52
 64c:	96 e0       	ldi	r25, 0x06	; 6
 64e:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 652:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 656:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 65a:	08 95       	ret

0000065c <detailed_menu>:
 65c:	82 30       	cpi	r24, 0x02	; 2
 65e:	91 05       	cpc	r25, r1
 660:	b1 f1       	breq	.+108    	; 0x6ce <detailed_menu+0x72>
 662:	83 30       	cpi	r24, 0x03	; 3
 664:	91 05       	cpc	r25, r1
 666:	09 f4       	brne	.+2      	; 0x66a <detailed_menu+0xe>
 668:	61 c0       	rjmp	.+194    	; 0x72c <detailed_menu+0xd0>
 66a:	01 97       	sbiw	r24, 0x01	; 1
 66c:	09 f0       	breq	.+2      	; 0x670 <detailed_menu+0x14>
 66e:	8c c0       	rjmp	.+280    	; 0x788 <detailed_menu+0x12c>
 670:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 674:	61 e0       	ldi	r22, 0x01	; 1
 676:	87 e0       	ldi	r24, 0x07	; 7
 678:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 67c:	86 e0       	ldi	r24, 0x06	; 6
 67e:	91 e0       	ldi	r25, 0x01	; 1
 680:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 684:	62 e0       	ldi	r22, 0x02	; 2
 686:	87 e0       	ldi	r24, 0x07	; 7
 688:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 68c:	80 e1       	ldi	r24, 0x10	; 16
 68e:	91 e0       	ldi	r25, 0x01	; 1
 690:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 694:	82 e0       	ldi	r24, 0x02	; 2
 696:	96 e0       	ldi	r25, 0x06	; 6
 698:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 69c:	82 e2       	ldi	r24, 0x22	; 34
 69e:	91 e0       	ldi	r25, 0x01	; 1
 6a0:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 6a4:	63 e0       	ldi	r22, 0x03	; 3
 6a6:	87 e0       	ldi	r24, 0x07	; 7
 6a8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 6ac:	86 e2       	ldi	r24, 0x26	; 38
 6ae:	91 e0       	ldi	r25, 0x01	; 1
 6b0:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 6b4:	8c e0       	ldi	r24, 0x0C	; 12
 6b6:	96 e0       	ldi	r25, 0x06	; 6
 6b8:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 6bc:	88 e3       	ldi	r24, 0x38	; 56
 6be:	91 e0       	ldi	r25, 0x01	; 1
 6c0:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 6c4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 6c8:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 6cc:	08 95       	ret
 6ce:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 6d2:	61 e0       	ldi	r22, 0x01	; 1
 6d4:	87 e0       	ldi	r24, 0x07	; 7
 6d6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 6da:	86 e0       	ldi	r24, 0x06	; 6
 6dc:	91 e0       	ldi	r25, 0x01	; 1
 6de:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 6e2:	62 e0       	ldi	r22, 0x02	; 2
 6e4:	87 e0       	ldi	r24, 0x07	; 7
 6e6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 6ea:	8c e3       	ldi	r24, 0x3C	; 60
 6ec:	91 e0       	ldi	r25, 0x01	; 1
 6ee:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 6f2:	80 e2       	ldi	r24, 0x20	; 32
 6f4:	96 e0       	ldi	r25, 0x06	; 6
 6f6:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 6fa:	82 e2       	ldi	r24, 0x22	; 34
 6fc:	91 e0       	ldi	r25, 0x01	; 1
 6fe:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 702:	63 e0       	ldi	r22, 0x03	; 3
 704:	87 e0       	ldi	r24, 0x07	; 7
 706:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 70a:	8f e4       	ldi	r24, 0x4F	; 79
 70c:	91 e0       	ldi	r25, 0x01	; 1
 70e:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 712:	8a e2       	ldi	r24, 0x2A	; 42
 714:	96 e0       	ldi	r25, 0x06	; 6
 716:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 71a:	88 e3       	ldi	r24, 0x38	; 56
 71c:	91 e0       	ldi	r25, 0x01	; 1
 71e:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 722:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 726:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 72a:	08 95       	ret
 72c:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 730:	61 e0       	ldi	r22, 0x01	; 1
 732:	87 e0       	ldi	r24, 0x07	; 7
 734:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 738:	86 e0       	ldi	r24, 0x06	; 6
 73a:	91 e0       	ldi	r25, 0x01	; 1
 73c:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 740:	62 e0       	ldi	r22, 0x02	; 2
 742:	87 e0       	ldi	r24, 0x07	; 7
 744:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 748:	80 e1       	ldi	r24, 0x10	; 16
 74a:	91 e0       	ldi	r25, 0x01	; 1
 74c:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 750:	8e e3       	ldi	r24, 0x3E	; 62
 752:	96 e0       	ldi	r25, 0x06	; 6
 754:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 758:	82 e2       	ldi	r24, 0x22	; 34
 75a:	91 e0       	ldi	r25, 0x01	; 1
 75c:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 760:	63 e0       	ldi	r22, 0x03	; 3
 762:	87 e0       	ldi	r24, 0x07	; 7
 764:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 768:	86 e2       	ldi	r24, 0x26	; 38
 76a:	91 e0       	ldi	r25, 0x01	; 1
 76c:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 770:	88 e4       	ldi	r24, 0x48	; 72
 772:	96 e0       	ldi	r25, 0x06	; 6
 774:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 778:	88 e3       	ldi	r24, 0x38	; 56
 77a:	91 e0       	ldi	r25, 0x01	; 1
 77c:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 780:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 784:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 788:	08 95       	ret

0000078a <RTV_menu>:
 78a:	82 30       	cpi	r24, 0x02	; 2
 78c:	91 05       	cpc	r25, r1
 78e:	31 f1       	breq	.+76     	; 0x7dc <RTV_menu+0x52>
 790:	83 30       	cpi	r24, 0x03	; 3
 792:	91 05       	cpc	r25, r1
 794:	09 f4       	brne	.+2      	; 0x798 <RTV_menu+0xe>
 796:	41 c0       	rjmp	.+130    	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 798:	01 97       	sbiw	r24, 0x01	; 1
 79a:	09 f0       	breq	.+2      	; 0x79e <RTV_menu+0x14>
 79c:	5c c0       	rjmp	.+184    	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 79e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 7a2:	61 e0       	ldi	r22, 0x01	; 1
 7a4:	87 e0       	ldi	r24, 0x07	; 7
 7a6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 7aa:	82 e6       	ldi	r24, 0x62	; 98
 7ac:	91 e0       	ldi	r25, 0x01	; 1
 7ae:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 7b2:	62 e0       	ldi	r22, 0x02	; 2
 7b4:	87 e0       	ldi	r24, 0x07	; 7
 7b6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 7ba:	8e e6       	ldi	r24, 0x6E	; 110
 7bc:	91 e0       	ldi	r25, 0x01	; 1
 7be:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 7c2:	63 e0       	ldi	r22, 0x03	; 3
 7c4:	87 e0       	ldi	r24, 0x07	; 7
 7c6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 7ca:	80 e8       	ldi	r24, 0x80	; 128
 7cc:	91 e0       	ldi	r25, 0x01	; 1
 7ce:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 7d2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 7d6:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 7da:	08 95       	ret
 7dc:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 7e0:	61 e0       	ldi	r22, 0x01	; 1
 7e2:	87 e0       	ldi	r24, 0x07	; 7
 7e4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 7e8:	82 e6       	ldi	r24, 0x62	; 98
 7ea:	91 e0       	ldi	r25, 0x01	; 1
 7ec:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 7f0:	62 e0       	ldi	r22, 0x02	; 2
 7f2:	87 e0       	ldi	r24, 0x07	; 7
 7f4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 7f8:	82 e9       	ldi	r24, 0x92	; 146
 7fa:	91 e0       	ldi	r25, 0x01	; 1
 7fc:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 800:	63 e0       	ldi	r22, 0x03	; 3
 802:	87 e0       	ldi	r24, 0x07	; 7
 804:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 808:	84 ea       	ldi	r24, 0xA4	; 164
 80a:	91 e0       	ldi	r25, 0x01	; 1
 80c:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 810:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 814:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 818:	08 95       	ret
 81a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <SSD1306_ClearScreen>
 81e:	61 e0       	ldi	r22, 0x01	; 1
 820:	87 e0       	ldi	r24, 0x07	; 7
 822:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 826:	82 e6       	ldi	r24, 0x62	; 98
 828:	91 e0       	ldi	r25, 0x01	; 1
 82a:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 82e:	62 e0       	ldi	r22, 0x02	; 2
 830:	87 e0       	ldi	r24, 0x07	; 7
 832:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 836:	86 eb       	ldi	r24, 0xB6	; 182
 838:	91 e0       	ldi	r25, 0x01	; 1
 83a:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 83e:	63 e0       	ldi	r22, 0x03	; 3
 840:	87 e0       	ldi	r24, 0x07	; 7
 842:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
 846:	88 ec       	ldi	r24, 0xC8	; 200
 848:	91 e0       	ldi	r25, 0x01	; 1
 84a:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
 84e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 852:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
 856:	08 95       	ret

00000858 <Read_charPara>:

void Read_charPara()
{
 858:	cf 93       	push	r28
 85a:	df 93       	push	r29

	for(int i =0;i<3;i++ ){
 85c:	c0 e0       	ldi	r28, 0x00	; 0
 85e:	d0 e0       	ldi	r29, 0x00	; 0
 860:	17 c0       	rjmp	.+46     	; 0x890 <Read_charPara+0x38>
		int current = i*sizeof(chargePar);
 862:	2e e1       	ldi	r18, 0x1E	; 30
 864:	2c 9f       	mul	r18, r28
 866:	c0 01       	movw	r24, r0
 868:	2d 9f       	mul	r18, r29
 86a:	90 0d       	add	r25, r0
 86c:	11 24       	eor	r1, r1
		eeprom_read_block(&array[i],(void*)current,sizeof(chargePar));
 86e:	4e e1       	ldi	r20, 0x1E	; 30
 870:	50 e0       	ldi	r21, 0x00	; 0
 872:	bc 01       	movw	r22, r24
 874:	88 50       	subi	r24, 0x08	; 8
 876:	9a 4f       	sbci	r25, 0xFA	; 250
 878:	0e 94 42 05 	call	0xa84	; 0xa84 <eeprom_read_block>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 87c:	2f e3       	ldi	r18, 0x3F	; 63
 87e:	8d e0       	ldi	r24, 0x0D	; 13
 880:	93 e0       	ldi	r25, 0x03	; 3
 882:	21 50       	subi	r18, 0x01	; 1
 884:	80 40       	sbci	r24, 0x00	; 0
 886:	90 40       	sbci	r25, 0x00	; 0
 888:	e1 f7       	brne	.-8      	; 0x882 <Read_charPara+0x2a>
 88a:	00 c0       	rjmp	.+0      	; 0x88c <Read_charPara+0x34>
 88c:	00 00       	nop
};

void Read_charPara()
{

	for(int i =0;i<3;i++ ){
 88e:	21 96       	adiw	r28, 0x01	; 1
 890:	c3 30       	cpi	r28, 0x03	; 3
 892:	d1 05       	cpc	r29, r1
 894:	34 f3       	brlt	.-52     	; 0x862 <Read_charPara+0xa>
		eeprom_read_block(&array[i],(void*)current,sizeof(chargePar));
		_delay_ms(1000);
	}


 896:	df 91       	pop	r29
 898:	cf 91       	pop	r28
 89a:	08 95       	ret

0000089c <main>:
		//strcpy(chp2.device,"a20");
		//eeprom_write_block(&chp2,(void*)(2*sizeof(chargepar)),sizeof(chargepar));
				
				
	
	Read_charPara(array);
 89c:	88 ef       	ldi	r24, 0xF8	; 248
 89e:	95 e0       	ldi	r25, 0x05	; 5
 8a0:	0e 94 2c 04 	call	0x858	; 0x858 <Read_charPara>
	
	
	DDRD = 0x00;
 8a4:	1a b8       	out	0x0a, r1	; 10
	SSD1306_Init (addr);
 8a6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 8aa:	0e 94 73 01 	call	0x2e6	; 0x2e6 <SSD1306_Init>
	update_menu(um);
 8ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8b2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8b6:	0e 94 b7 02 	call	0x56e	; 0x56e <update_menu>
	SSD1306_DrawString (array[0].device);
 8ba:	88 ef       	ldi	r24, 0xF8	; 248
 8bc:	95 e0       	ldi	r25, 0x05	; 5
 8be:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
	SSD1306_SetPosition (7, 2);
 8c2:	62 e0       	ldi	r22, 0x02	; 2
 8c4:	87 e0       	ldi	r24, 0x07	; 7
 8c6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
	SSD1306_DrawString (array[1].device);
 8ca:	86 e1       	ldi	r24, 0x16	; 22
 8cc:	96 e0       	ldi	r25, 0x06	; 6
 8ce:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
	SSD1306_SetPosition (7, 3);
 8d2:	63 e0       	ldi	r22, 0x03	; 3
 8d4:	87 e0       	ldi	r24, 0x07	; 7
 8d6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <SSD1306_SetPosition>
	SSD1306_DrawString (">>");
 8da:	83 e0       	ldi	r24, 0x03	; 3
 8dc:	91 e0       	ldi	r25, 0x01	; 1
 8de:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
	SSD1306_DrawString (array[2].device);
 8e2:	84 e3       	ldi	r24, 0x34	; 52
 8e4:	96 e0       	ldi	r25, 0x06	; 6
 8e6:	0e 94 4a 02 	call	0x494	; 0x494 <SSD1306_DrawString>
	SSD1306_UpdateScreen (addr);
 8ea:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <addr>
 8ee:	0e 94 b7 01 	call	0x36e	; 0x36e <SSD1306_UpdateScreen>
	
	while (1)
	{
		
		if(up){
 8f2:	4d 9b       	sbis	0x09, 5	; 9
 8f4:	1b c0       	rjmp	.+54     	; 0x92c <__stack+0x2d>
			if(um>1){
 8f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8fa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8fe:	82 30       	cpi	r24, 0x02	; 2
 900:	91 05       	cpc	r25, r1
 902:	2c f0       	brlt	.+10     	; 0x90e <__stack+0xf>
				um--;
 904:	01 97       	sbiw	r24, 0x01	; 1
 906:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 90a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			update_menu(um);
 90e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 912:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 916:	0e 94 b7 02 	call	0x56e	; 0x56e <update_menu>
 91a:	2f ef       	ldi	r18, 0xFF	; 255
 91c:	84 e3       	ldi	r24, 0x34	; 52
 91e:	9c e0       	ldi	r25, 0x0C	; 12
 920:	21 50       	subi	r18, 0x01	; 1
 922:	80 40       	sbci	r24, 0x00	; 0
 924:	90 40       	sbci	r25, 0x00	; 0
 926:	e1 f7       	brne	.-8      	; 0x920 <__stack+0x21>
 928:	00 c0       	rjmp	.+0      	; 0x92a <__stack+0x2b>
 92a:	00 00       	nop
			_delay_ms(4000);
		}
		
		
		if(down){
 92c:	4c 9b       	sbis	0x09, 4	; 9
 92e:	1b c0       	rjmp	.+54     	; 0x966 <__stack+0x67>
			if(um<3){
 930:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 934:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 938:	83 30       	cpi	r24, 0x03	; 3
 93a:	91 05       	cpc	r25, r1
 93c:	2c f4       	brge	.+10     	; 0x948 <__stack+0x49>
				um++;
 93e:	01 96       	adiw	r24, 0x01	; 1
 940:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 944:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			update_menu(um);
 948:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 94c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 950:	0e 94 b7 02 	call	0x56e	; 0x56e <update_menu>
 954:	2f ef       	ldi	r18, 0xFF	; 255
 956:	84 e3       	ldi	r24, 0x34	; 52
 958:	9c e0       	ldi	r25, 0x0C	; 12
 95a:	21 50       	subi	r18, 0x01	; 1
 95c:	80 40       	sbci	r24, 0x00	; 0
 95e:	90 40       	sbci	r25, 0x00	; 0
 960:	e1 f7       	brne	.-8      	; 0x95a <__stack+0x5b>
 962:	00 c0       	rjmp	.+0      	; 0x964 <__stack+0x65>
 964:	00 00       	nop
			_delay_ms(4000);
		}
		if(Enter){
 966:	4a 9b       	sbis	0x09, 2	; 9
 968:	6c c0       	rjmp	.+216    	; 0xa42 <__stack+0x143>
			if((um>0)&&(um<4)){
 96a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 96e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 972:	9c 01       	movw	r18, r24
 974:	21 50       	subi	r18, 0x01	; 1
 976:	31 09       	sbc	r19, r1
 978:	23 30       	cpi	r18, 0x03	; 3
 97a:	31 05       	cpc	r19, r1
 97c:	b0 f4       	brcc	.+44     	; 0x9aa <__stack+0xab>
				dm=um;
 97e:	90 93 f5 05 	sts	0x05F5, r25	; 0x8005f5 <dm+0x1>
 982:	80 93 f4 05 	sts	0x05F4, r24	; 0x8005f4 <dm>
				detailed_menu(dm);
 986:	0e 94 2e 03 	call	0x65c	; 0x65c <detailed_menu>
				um=5;
 98a:	85 e0       	ldi	r24, 0x05	; 5
 98c:	90 e0       	ldi	r25, 0x00	; 0
 98e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 992:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 996:	2f ef       	ldi	r18, 0xFF	; 255
 998:	84 e3       	ldi	r24, 0x34	; 52
 99a:	9c e0       	ldi	r25, 0x0C	; 12
 99c:	21 50       	subi	r18, 0x01	; 1
 99e:	80 40       	sbci	r24, 0x00	; 0
 9a0:	90 40       	sbci	r25, 0x00	; 0
 9a2:	e1 f7       	brne	.-8      	; 0x99c <__stack+0x9d>
 9a4:	00 c0       	rjmp	.+0      	; 0x9a6 <__stack+0xa7>
 9a6:	00 00       	nop
 9a8:	4c c0       	rjmp	.+152    	; 0xa42 <__stack+0x143>
				_delay_ms(4000);
				
				
			
			}else if((dm>0)&&(dm<4)){
 9aa:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <dm>
 9ae:	90 91 f5 05 	lds	r25, 0x05F5	; 0x8005f5 <dm+0x1>
 9b2:	9c 01       	movw	r18, r24
 9b4:	21 50       	subi	r18, 0x01	; 1
 9b6:	31 09       	sbc	r19, r1
 9b8:	23 30       	cpi	r18, 0x03	; 3
 9ba:	31 05       	cpc	r19, r1
 9bc:	f8 f4       	brcc	.+62     	; 0x9fc <__stack+0xfd>
				rm=dm;
 9be:	90 93 f3 05 	sts	0x05F3, r25	; 0x8005f3 <rm+0x1>
 9c2:	80 93 f2 05 	sts	0x05F2, r24	; 0x8005f2 <rm>
				RTV_menu(rm);
 9c6:	0e 94 c5 03 	call	0x78a	; 0x78a <RTV_menu>
 9ca:	2f ef       	ldi	r18, 0xFF	; 255
 9cc:	84 e3       	ldi	r24, 0x34	; 52
 9ce:	9c e0       	ldi	r25, 0x0C	; 12
 9d0:	21 50       	subi	r18, 0x01	; 1
 9d2:	80 40       	sbci	r24, 0x00	; 0
 9d4:	90 40       	sbci	r25, 0x00	; 0
 9d6:	e1 f7       	brne	.-8      	; 0x9d0 <__stack+0xd1>
 9d8:	00 c0       	rjmp	.+0      	; 0x9da <__stack+0xdb>
 9da:	00 00       	nop
				_delay_ms(4000);
				dm=5;
 9dc:	85 e0       	ldi	r24, 0x05	; 5
 9de:	90 e0       	ldi	r25, 0x00	; 0
 9e0:	90 93 f5 05 	sts	0x05F5, r25	; 0x8005f5 <dm+0x1>
 9e4:	80 93 f4 05 	sts	0x05F4, r24	; 0x8005f4 <dm>
 9e8:	2f ef       	ldi	r18, 0xFF	; 255
 9ea:	84 e3       	ldi	r24, 0x34	; 52
 9ec:	9c e0       	ldi	r25, 0x0C	; 12
 9ee:	21 50       	subi	r18, 0x01	; 1
 9f0:	80 40       	sbci	r24, 0x00	; 0
 9f2:	90 40       	sbci	r25, 0x00	; 0
 9f4:	e1 f7       	brne	.-8      	; 0x9ee <__stack+0xef>
 9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <__stack+0xf9>
 9f8:	00 00       	nop
 9fa:	23 c0       	rjmp	.+70     	; 0xa42 <__stack+0x143>
				_delay_ms(4000);
			}else if((rm>0)&&(rm<4)){
 9fc:	80 91 f2 05 	lds	r24, 0x05F2	; 0x8005f2 <rm>
 a00:	90 91 f3 05 	lds	r25, 0x05F3	; 0x8005f3 <rm+0x1>
 a04:	9c 01       	movw	r18, r24
 a06:	21 50       	subi	r18, 0x01	; 1
 a08:	31 09       	sbc	r19, r1
 a0a:	23 30       	cpi	r18, 0x03	; 3
 a0c:	31 05       	cpc	r19, r1
 a0e:	c8 f4       	brcc	.+50     	; 0xa42 <__stack+0x143>
				um=rm;
 a10:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a14:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
				update_menu(rm);
 a18:	0e 94 b7 02 	call	0x56e	; 0x56e <update_menu>
 a1c:	2f ef       	ldi	r18, 0xFF	; 255
 a1e:	84 e3       	ldi	r24, 0x34	; 52
 a20:	9c e0       	ldi	r25, 0x0C	; 12
 a22:	21 50       	subi	r18, 0x01	; 1
 a24:	80 40       	sbci	r24, 0x00	; 0
 a26:	90 40       	sbci	r25, 0x00	; 0
 a28:	e1 f7       	brne	.-8      	; 0xa22 <__stack+0x123>
 a2a:	00 c0       	rjmp	.+0      	; 0xa2c <__stack+0x12d>
 a2c:	00 00       	nop
				_delay_ms(4000);
				rm=5;
 a2e:	85 e0       	ldi	r24, 0x05	; 5
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	90 93 f3 05 	sts	0x05F3, r25	; 0x8005f3 <rm+0x1>
 a36:	80 93 f2 05 	sts	0x05F2, r24	; 0x8005f2 <rm>
				dm=0;
 a3a:	10 92 f5 05 	sts	0x05F5, r1	; 0x8005f5 <dm+0x1>
 a3e:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <dm>
				
			
			}
		}
		if(back){
 a42:	4b 9b       	sbis	0x09, 3	; 9
 a44:	56 cf       	rjmp	.-340    	; 0x8f2 <main+0x56>
			if((dm<4)||(um<4)){
 a46:	80 91 f4 05 	lds	r24, 0x05F4	; 0x8005f4 <dm>
 a4a:	90 91 f5 05 	lds	r25, 0x05F5	; 0x8005f5 <dm+0x1>
 a4e:	04 97       	sbiw	r24, 0x04	; 4
 a50:	3c f0       	brlt	.+14     	; 0xa60 <__stack+0x161>
 a52:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 a56:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a5a:	04 97       	sbiw	r24, 0x04	; 4
 a5c:	0c f0       	brlt	.+2      	; 0xa60 <__stack+0x161>
 a5e:	49 cf       	rjmp	.-366    	; 0x8f2 <main+0x56>
				um=1;
 a60:	81 e0       	ldi	r24, 0x01	; 1
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a68:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
				update_menu(um);
 a6c:	0e 94 b7 02 	call	0x56e	; 0x56e <update_menu>
 a70:	2f ef       	ldi	r18, 0xFF	; 255
 a72:	84 e3       	ldi	r24, 0x34	; 52
 a74:	9c e0       	ldi	r25, 0x0C	; 12
 a76:	21 50       	subi	r18, 0x01	; 1
 a78:	80 40       	sbci	r24, 0x00	; 0
 a7a:	90 40       	sbci	r25, 0x00	; 0
 a7c:	e1 f7       	brne	.-8      	; 0xa76 <__stack+0x177>
 a7e:	00 c0       	rjmp	.+0      	; 0xa80 <__stack+0x181>
 a80:	00 00       	nop
 a82:	37 cf       	rjmp	.-402    	; 0x8f2 <main+0x56>

00000a84 <eeprom_read_block>:
 a84:	dc 01       	movw	r26, r24
 a86:	cb 01       	movw	r24, r22

00000a88 <eeprom_read_blraw>:
 a88:	fc 01       	movw	r30, r24
 a8a:	f9 99       	sbic	0x1f, 1	; 31
 a8c:	fe cf       	rjmp	.-4      	; 0xa8a <eeprom_read_blraw+0x2>
 a8e:	06 c0       	rjmp	.+12     	; 0xa9c <eeprom_read_blraw+0x14>
 a90:	f2 bd       	out	0x22, r31	; 34
 a92:	e1 bd       	out	0x21, r30	; 33
 a94:	f8 9a       	sbi	0x1f, 0	; 31
 a96:	31 96       	adiw	r30, 0x01	; 1
 a98:	00 b4       	in	r0, 0x20	; 32
 a9a:	0d 92       	st	X+, r0
 a9c:	41 50       	subi	r20, 0x01	; 1
 a9e:	50 40       	sbci	r21, 0x00	; 0
 aa0:	b8 f7       	brcc	.-18     	; 0xa90 <eeprom_read_blraw+0x8>
 aa2:	08 95       	ret

00000aa4 <_exit>:
 aa4:	f8 94       	cli

00000aa6 <__stop_program>:
 aa6:	ff cf       	rjmp	.-2      	; 0xaa6 <__stop_program>
